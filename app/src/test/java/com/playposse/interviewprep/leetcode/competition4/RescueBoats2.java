package com.playposse.interviewprep.leetcode.competition4;

import org.junit.Test;

import java.util.Arrays;

import static org.junit.Assert.assertEquals;

/**
 * Created by thoma on 8/4/2018.
 */
public class RescueBoats2 {

    @Test
    public void test() {
        assertEquals(1, new Solution().numRescueBoats(new int[]{1, 2}, 3));
        assertEquals(3, new Solution().numRescueBoats(new int[]{3, 2, 2, 1}, 3));
        assertEquals(4, new Solution().numRescueBoats(new int[]{3, 5, 3, 4}, 5));
        assertEquals(677, new Solution().numRescueBoats(new int[]{99, 41, 36, 52, 50, 45, 45, 84,
                1, 55, 62, 65, 34, 44, 66, 80, 90, 38, 6, 73, 52, 10, 96, 66, 70, 19, 96, 64, 87, 93, 75,
                94, 63, 100, 5, 92, 10, 71, 32, 77, 85, 46, 38, 93, 31, 40, 23, 91, 82, 22, 49, 49, 90,
                86, 93, 98, 20, 25, 3, 83, 15, 12, 80, 94, 27, 67, 51, 79, 75, 95, 80, 43, 71, 19, 52,
                71, 13, 10, 32, 83, 71, 50, 22, 26, 55, 99, 2, 42, 44, 93, 98, 38, 58, 10, 26, 99, 47,
                92, 69, 14, 68, 5, 66, 97, 6, 16, 22, 54, 58, 84, 76, 29, 29, 18, 4, 81, 73, 27, 45, 4,
                22, 96, 66, 96, 11, 70, 12, 42, 62, 43, 55, 6, 66, 3, 70, 87, 100, 64, 56, 26, 72, 65,
                49, 70, 76, 43, 91, 24, 57, 54, 71, 96, 43, 81, 52, 44, 38, 62, 20, 59, 35, 26, 48, 57,
                82, 28, 76, 63, 15, 10, 31, 72, 97, 36, 86, 11, 75, 80, 31, 29, 1, 3, 36, 84, 8, 87, 67,
                10, 98, 55, 91, 20, 39, 76, 52, 32, 40, 83, 26, 99, 59, 2, 63, 93, 96, 5, 94, 91, 74, 57,
                8, 70, 13, 64, 43, 2, 64, 75, 4, 35, 81, 45, 58, 30, 45, 60, 65, 73, 64, 13, 13, 14, 43,
                80, 6, 61, 69, 85, 55, 69, 15, 8, 84, 91, 84, 96, 71, 51, 2, 3, 30, 81, 16, 26, 2, 3, 87,
                39, 92, 23, 82, 60, 23, 97, 68, 28, 10, 9, 82, 58, 1, 93, 39, 93, 2, 29, 36, 61, 31, 73,
                51, 73, 69, 39, 100, 4, 100, 97, 71, 70, 27, 11, 19, 14, 65, 8, 47, 54, 50, 17, 79, 9, 93,
                71, 21, 48, 57, 90, 55, 22, 12, 50, 4, 57, 94, 43, 73, 65, 57, 6, 99, 70, 26, 62, 74, 69,
                11, 68, 29, 79, 46, 60, 66, 90, 19, 64, 54, 86, 25, 95, 30, 2, 8, 29, 10, 62, 100, 20, 81,
                71, 45, 99, 9, 72, 34, 21, 54, 69, 27, 98, 75, 95, 41, 42, 24, 48, 23, 36, 99, 97, 82, 22,
                3, 7, 31, 42, 25, 75, 36, 40, 85, 3, 5, 26, 15, 4, 33, 72, 64, 49, 5, 68, 64, 7, 76, 36, 40,
                8, 27, 48, 65, 8, 77, 85, 51, 92, 17, 36, 66, 24, 58, 91, 71, 2, 5, 49, 66, 91, 41, 93, 70,
                16, 97, 15, 33, 46, 57, 90, 54, 88, 60, 19, 59, 89, 50, 53, 42, 2, 66, 78, 58, 64, 52, 19,
                16, 22, 73, 9, 10, 12, 27, 91, 57, 22, 93, 18, 76, 100, 84, 72, 92, 28, 40, 86, 57, 19, 91,
                67, 5, 1, 72, 26, 15, 58, 43, 14, 15, 18, 29, 9, 71, 13, 16, 84, 54, 46, 90, 100, 83, 14,
                59, 17, 24, 69, 31, 95, 18, 28, 89, 58, 24, 69, 7, 26, 81, 38, 79, 32, 59, 8, 8, 51, 92,
                83, 92, 64, 68, 80, 73, 16, 8, 78, 100, 32, 52, 46, 64, 70, 55, 70, 98, 66, 17, 37, 65, 75,
                4, 98, 12, 86, 47, 35, 76, 87, 77, 47, 26, 6, 17, 55, 88, 27, 57, 67, 70, 27, 54, 33, 71, 23,
                74, 40, 87, 11, 32, 43, 55, 45, 38, 5, 26, 7, 42, 78, 11, 12, 43, 54, 27, 24, 56, 62, 4, 83,
                55, 64, 35, 2, 28, 11, 95, 100, 49, 63, 70, 53, 44, 65, 27, 10, 64, 71, 59, 98, 21, 54, 7, 6,
                98, 95, 53, 92, 50, 73, 64, 17, 75, 49, 67, 99, 66, 80, 69, 53, 64, 64, 100, 18, 97, 47, 47,
                52, 17, 82, 10, 18, 8, 1, 44, 92, 55, 45, 23, 41, 65, 27, 96, 36, 50, 93, 14, 27, 17, 46, 99,
                4, 51, 80, 93, 82, 64, 84, 52, 3, 70, 86, 92, 26, 17, 91, 92, 2, 18, 16, 9, 86, 36, 86, 22,
                69, 92, 37, 89, 64, 39, 25, 82, 22, 4, 64, 22, 74, 36, 77, 62, 30, 72, 29, 56, 2, 98, 44, 43,
                30, 58, 20, 77, 31, 10, 74, 78, 49, 29, 44, 92, 64, 63, 6, 14, 44, 42, 8, 57, 1, 45, 84, 52,
                2, 24, 32, 71, 70, 14, 3, 64, 7, 92, 100, 29, 68, 90, 71, 19, 64, 91, 57, 63, 95, 55, 52, 80,
                88, 54, 2, 24, 73, 78, 27, 11, 99, 4, 52, 36, 49, 36, 3, 36, 39, 44, 96, 57, 50, 79, 56, 5, 42,
                85, 27, 59, 25, 35, 2, 30, 17, 6, 76, 14, 37, 13, 43, 22, 44, 43, 61, 33, 57, 31, 21, 82, 20,
                89, 43, 84, 97, 83, 29, 75, 52, 21, 34, 72, 55, 76, 18, 64, 56, 42, 78, 70, 97, 6, 54, 63, 43,
                47, 74, 55, 54, 96, 48, 68, 36, 98, 21, 24, 30, 39, 93, 52, 15, 83, 85, 88, 31, 39, 10, 22, 41,
                33, 79, 43, 20, 36, 13, 93, 95, 75, 65, 6, 21, 62, 66, 6, 89, 19, 29, 41, 99, 88, 94, 28, 93,
                25, 53, 21, 60, 48, 52, 65, 22, 64, 43, 65, 74, 20, 55, 23, 54, 1, 41, 58, 6, 3, 30, 36, 38,
                78, 69, 90, 32, 56, 22, 30, 88, 19, 91, 83, 86, 30, 26, 98, 10, 50, 16, 25, 93, 58, 57, 64,
                49, 62, 58, 50, 60, 78, 18, 6, 22, 18, 9, 43, 74, 48, 61, 97, 83, 67, 88, 25, 98, 22, 38, 38,
                92, 90, 83, 12, 14, 10, 14, 67, 60, 75, 23, 52, 81, 30, 6, 22, 2, 7, 40, 43, 90, 43, 29, 84,
                90, 12, 60, 67, 84, 43, 88, 38, 30, 11, 95, 38, 31, 78, 32, 65, 21, 40, 29, 63, 34, 68, 71,
                81, 25, 34, 13, 25, 89, 63, 18, 58, 73, 1, 8, 99, 55, 14, 32, 52, 31, 13, 54, 62, 19, 67, 90,
                28, 32, 78, 21, 14, 8, 47, 44, 60, 64, 3, 41, 83, 38, 79, 86, 90, 12, 15, 31, 14, 48, 67, 6,
                79, 15, 60, 92, 16, 78, 65, 28, 79, 25, 20, 5, 14, 29, 30, 82, 57, 49, 81, 40, 38, 72, 86, 77,
                73, 90, 47, 12, 87, 49, 2, 100, 16, 64, 24, 12, 49, 1, 6, 38, 11, 74, 89, 21, 1, 9, 92, 48, 73,
                93, 78, 15, 34, 60, 73, 5, 55, 33, 3, 23, 29, 61, 52, 13, 58, 67, 46, 38, 70, 53, 4, 10, 68, 82,
                4, 19, 91, 50, 28, 77, 3, 76, 100, 10, 39, 44, 19, 50, 17, 44, 22, 59, 83, 83, 39, 35, 39, 84, 49,
                40, 56, 97, 83, 63, 5, 55, 82, 29, 22, 67, 93, 5, 25, 92, 94, 4, 43, 49, 44, 22, 23, 39, 87, 47, 22,
                74, 16, 99, 23, 51, 58, 5, 71, 67, 17, 77, 24, 34, 48, 82, 30, 46, 79, 5, 81, 72, 24, 68, 82, 35, 43,
                34, 39, 76, 31, 41, 2, 67, 52, 91, 34, 17, 13, 69, 99, 61, 83, 13, 16, 32, 19, 100, 82, 90, 62, 21,
                68, 20, 57, 65, 85, 93, 6, 55, 86, 87, 74, 55, 34, 11, 34, 78, 20, 87, 84, 51, 76, 27, 25, 32,
                27, 14, 3, 78, 2, 97, 43, 75, 98, 63, 84, 63, 38, 47, 23, 34, 50, 12, 44, 79, 70, 83, 86, 68,
                88, 55, 10, 21, 83, 13, 37, 73, 84, 21, 74, 31, 68, 56, 29, 76, 2, 41, 94, 4, 48, 51, 73, 68,
                9, 89, 32, 18, 57, 62, 75, 50, 95, 40, 7, 20, 50, 30, 8, 80, 21, 92, 30, 5, 11, 69, 80, 48, 63,
                39, 35, 34, 97, 11, 46, 61, 40, 95, 90, 39, 11, 44, 73, 18, 83, 69, 33, 82, 89, 2, 17, 96, 2, 95}, 100));
    }

    class Solution {
        public int numRescueBoats(int[] people, int limit) {
            Arrays.sort(people);

            int boatCount = 0;
            int firstIndex = people.length - 1;
            int secondIndex = firstIndex - 1;
            while (firstIndex >= 0) {
                while ((firstIndex >= 0) && (people[firstIndex] == -1)) {
                    firstIndex--;
                }

                if (firstIndex < 0) {
                    break;
                }

                boatCount++;
                int bigPerson = people[firstIndex];
                people[firstIndex] = -1;
                firstIndex--;
                secondIndex = Math.max(0, Math.min(secondIndex, firstIndex));

                if (firstIndex < 0) {
                    break;
                }

                int complement = limit - bigPerson;
                while ((secondIndex < firstIndex) && ((people[secondIndex] < complement) || (people[secondIndex] == -1))) {
                    secondIndex++;
                }

                while ((secondIndex > 0) && ((people[secondIndex] > complement) || (people[secondIndex] == -1))) {
                    secondIndex--;
                }

                if ((people[secondIndex] <= complement) && (people[secondIndex] != -1)) {
                    people[secondIndex] = -1;
                }
            }

            return boatCount;
        }
    }
}
